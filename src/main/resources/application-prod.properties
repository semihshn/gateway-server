#datasource
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

#jwt
# Generated by https://www.devglan.com/online-tools/rsa-encryption-decryption
# By default, the private key is generated in PKCS#8 format and the public key is generated in X.509 format.
# ----- To Generate on local ---- #
#openssl genrsa -out private.pem 4096
#openssl rsa -in private.pem -pubout -outform PEM -out public_key.pem
#openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem -nocrypt
authentication.jwt.public-key=${JWT_PUBLIC_KEY}
authentication.jwt.private-key=${JWT_PRIVATE_KEY}

#1 day
authentication.jwt.expiration-in-ms=86400000

# 30 seconds
retrofit.timeout=30

# should be same with other microservices
service.security.secure-key-username=${SECURE_KEY_USERNAME}
service.security.secure-key-password=${SECURE_KEY_PASSWORD}

driver.service.url=${DRIVER_SERVICE_URL}
passenger.service.url=${PASSENGER_SERVICE_URL}

spring.main.allow-circular-references=true
